{"version":3,"sources":["Components/Experience/Experience.module.css","assets/images/dot.svg","Components/AboutMe/AboutMe.module.css","Components/Jobs/Jobs.module.css","assets/images/photo.png","Components/Skill/Skill.module.css","Components/AboutMe/AboutMe.jsx","Components/Skill/Skill.jsx","Components/Experience/Experience.jsx","Components/Jobs/Jobs.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","AboutMe","className","styles","Wrapper","AboutMeHeader","AboutMeInfo","src","photo","alt","AboutMeBlock","href","link","Skill","props","skill","dot","title","Experience","wrapper","baseTechnologiesBlock","btSkills","expBLock","coursesBlock","study","Jobs","jobs","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,sBAAwB,0CAA0C,MAAQ,0BAA0B,SAAW,6BAA6B,SAAW,6BAA6B,aAAe,iCAAiC,MAAQ,4B,gBCDpSD,EAAOC,QAAU,IAA0B,iC,gBCC3CD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,YAAc,6BAA6B,aAAe,8BAA8B,KAAO,wB,gBCAnMD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,KAAO,mBAAmB,MAAQ,sB,kBCDpFD,EAAOC,QAAU,IAA0B,mC,gBCC3CD,EAAOC,QAAU,CAAC,MAAQ,uB,+LCqCXC,EAlCC,WACZ,OAAO,yBAAKC,UAAWC,IAAOC,SAC1B,4BAAQF,UAAWC,IAAOE,eACtB,6BAAK,2BAAG,yIACR,6BACI,4BACI,8BAAM,+GAKlB,yBAAKH,UAAWC,IAAOG,aACnB,6BACI,yBAAKC,IAAKC,IAAOC,IAAI,MAEzB,6BACI,yBAAKP,UAAWC,IAAOO,cACnB,sEACA,gGACA,qJAEJ,yBAAKR,UAAWC,IAAOO,cACnB,iFACA,8CACA,sDACA,2DACA,4DAEJ,uBAAGC,KAAK,iCAAiCT,UAAWC,IAAOS,MAA3D,c,gDCtBDC,EAND,SAACC,GACX,OAAO,yBAAKZ,UAAWC,IAAOY,OAC1B,2BAAG,yBAAKR,IAAKS,IAAKP,IAAI,KAAI,8BAAOK,EAAMG,UC+ChCC,EAhDI,WACf,OAAO,yBAAKhB,UAAWC,IAAOgB,SAC1B,yBAAKjB,UAAWC,IAAOiB,uBACnB,yBAAKlB,UAAWC,IAAOc,OAAvB,4GACA,yBAAKf,UAAWC,IAAOkB,UACnB,6BACI,kBAAC,EAAD,CAAOJ,MAAM,aACb,kBAAC,EAAD,CAAOA,MAAM,eACb,kBAAC,EAAD,CAAOA,MAAM,aAEjB,6BACI,kBAAC,EAAD,CAAOA,MAAM,UACb,kBAAC,EAAD,CAAOA,MAAM,QACb,kBAAC,EAAD,CAAOA,MAAM,kBAIzB,yBAAKf,UAAWC,IAAOmB,UACnB,wBAAIpB,UAAWC,IAAOc,OAAtB,gFACA,iNAIJ,yBAAKf,UAAWC,IAAOoB,cACnB,wBAAIrB,UAAWC,IAAOc,OAAtB,8GACA,6BACI,2BAAG,yBAAKV,IAAKS,IAAKP,IAAI,KAAI,mIAC1B,2BAAG,yBAAKF,IAAKS,IAAKP,IAAI,KAAI,yOAA1B,KACA,2BAAG,yBAAKF,IAAKS,IAAKP,IAAI,KAAI,sPAA1B,KACA,2BAAG,yBAAKF,IAAKS,IAAKP,IAAI,KAAI,kJAC1B,2BAAG,yBAAKF,IAAKS,IAAKP,IAAI,KAAI,uEAA1B,OAGR,yBAAKP,UAAWC,IAAOqB,OACnB,6BACI,oGACA,oVAIJ,6BACI,uHACA,6D,gBCjCDC,EAXF,WACT,OAAO,yBAAKvB,UAAWC,IAAOgB,SAC1B,yBAAKjB,UAAWC,IAAOuB,MACnB,yBAAKxB,UAAWC,IAAOc,OAAvB,qIACA,oDACA,6JCWGU,MAbf,WACE,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,gCACI,sJCDU0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.179ea9ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Experience_wrapper__1ZVGS\",\"baseTechnologiesBlock\":\"Experience_baseTechnologiesBlock__16RS4\",\"title\":\"Experience_title__XDCMB\",\"btSkills\":\"Experience_btSkills__3vVIB\",\"expBLock\":\"Experience_expBLock__2G_fD\",\"coursesBlock\":\"Experience_coursesBlock__1B-kC\",\"study\":\"Experience_study__RqfIR\"};","module.exports = __webpack_public_path__ + \"static/media/dot.748e26fe.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AboutMe_Wrapper___l40K\",\"AboutMeHeader\":\"AboutMe_AboutMeHeader__3gst_\",\"AboutMeInfo\":\"AboutMe_AboutMeInfo__162RP\",\"AboutMeBlock\":\"AboutMe_AboutMeBlock___4Gla\",\"link\":\"AboutMe_link__2hDoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Jobs_wrapper__3eVcZ\",\"jobs\":\"Jobs_jobs__3IsIV\",\"title\":\"Jobs_title__3vRxj\"};","module.exports = __webpack_public_path__ + \"static/media/photo.de2a9158.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skill\":\"Skill_skill__18Y6u\"};","import React from 'react';\r\nimport styles from './AboutMe.module.css';\r\nimport photo from '../../assets/images/photo.png';\r\n\r\nconst AboutMe = () => {\r\n    return <div className={styles.Wrapper}>\r\n        <header className={styles.AboutMeHeader}>\r\n            <div><i><h1>Каравайчик Алексей</h1></i></div>\r\n            <div>\r\n                <h1>\r\n                    <span><i>Front-end разработчик</i></span>\r\n                </h1>\r\n            </div>\r\n\r\n        </header>\r\n        <div className={styles.AboutMeInfo}>\r\n            <div>\r\n                <img src={photo} alt=\"\"/>\r\n            </div>\r\n            <div>\r\n                <div className={styles.AboutMeBlock}>\r\n                    <h2>Обо мне:</h2>\r\n                    <p>Возраст: 29 лет</p>\r\n                    <p>Семейный статус: Женат</p>\r\n                </div>\r\n                <div className={styles.AboutMeBlock}>\r\n                    <h2>Контакты:</h2>\r\n                    <p>+37529 6593560 </p>\r\n                    <p>a.karavaychik@gmail.com</p>\r\n                    <p>Skype: alexey.karavaychik.wm</p>\r\n                    <p>Telegram:@AlexeyKaravaychik </p>\r\n                </div>\r\n                <a href=\"https://github.com/AlexGit2012\" className={styles.link}>GitHub</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default AboutMe;","import React from \"react\";\r\nimport styles from './Skill.module.css'\r\nimport dot from \"../../assets/images/dot.svg\";\r\n\r\nconst Skill = (props) => {\r\n    return <div className={styles.skill}>\r\n        <p><img src={dot} alt=\"\"/><span>{props.title}</span></p>\r\n    </div>\r\n}\r\n\r\nexport default Skill;","import React from 'react';\r\nimport styles from './Experience.module.css'\r\nimport Skill from \"../Skill/Skill\";\r\nimport dot from '../../assets/images/dot.svg'\r\n\r\nconst Experience = () => {\r\n    return <div className={styles.wrapper}>\r\n        <div className={styles.baseTechnologiesBlock}>\r\n            <div className={styles.title}>Базовые технологии:</div>\r\n            <div className={styles.btSkills}>\r\n                <div>\r\n                    <Skill title=\"HTML,CSS\"/>\r\n                    <Skill title=\"JavaScript\"/>\r\n                    <Skill title=\"ReactJS\"/>\r\n                </div>\r\n                <div>\r\n                    <Skill title=\"Redux\"/>\r\n                    <Skill title=\"Git\"/>\r\n                    <Skill title=\"TypeScript\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className={styles.expBLock}>\r\n            <h3 className={styles.title}>Имеется опыт в: </h3>\r\n            <p>SOLID, Axios, SPA, FLUX, BLL, DAL, selectors, hooks, context API, HOC, routs, REST API,\r\n                http requests, promises, event loop, lexical environment, semantic HTML, OOP,\r\n                SASS/SCSS. </p>\r\n        </div>\r\n        <div className={styles.coursesBlock}>\r\n            <h3 className={styles.title}>Курсы и сертификаты: </h3>\r\n            <div>\r\n                <p><img src={dot} alt=\"\"/><span>Java SE (очный курс) – 2013 год</span></p>\r\n                <p><img src={dot} alt=\"\"/><span>Программирование на Python (курс на Stepik.org) – 2018 год,</span> </p>\r\n                <p><img src={dot} alt=\"\"/><span>Основы тестирования ПО (очный курс) – 2018 год,</span> </p>\r\n                <p><img src={dot} alt=\"\"/><span>Frontend разработка + ReactJS – 2019-2020 гг.,</span></p>\r\n                <p><img src={dot} alt=\"\"/><span>GitHub GIT course – 2020 г.</span> </p>\r\n            </div>\r\n        </div>\r\n        <div className={styles.study}>\r\n            <div>\r\n                <h4>Образование: </h4>\r\n                <p>Белорусский государственный\r\n                    медицинский\r\n                    университет – 2008-2014</p>\r\n            </div>\r\n            <div>\r\n                <h4>Английский язык: </h4>\r\n                <p>Pre-intermediate – B1</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Experience;","import React from 'react';\r\nimport styles from './Jobs.module.css'\r\n\r\nconst Jobs = () => {\r\n    return <div className={styles.wrapper}>\r\n        <div className={styles.jobs}>\r\n            <div className={styles.title}>Предыдущие места работы:</div>\r\n            <p>Front-end developer: </p>\r\n            <p>Freelancer – 2020 - по настоящее время</p>\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Jobs;","import React from 'react';\nimport './App.css';\nimport AboutMe from \"./Components/AboutMe/AboutMe\";\nimport Experience from \"./Components/Experience/Experience\";\nimport Jobs from \"./Components/Jobs/Jobs\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AboutMe/>\n      <Experience/>\n      <Jobs/>\n      <footer>\n          <p>Алексей Каравайчик, 2020г.</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}